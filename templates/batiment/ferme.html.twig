{% extends 'base.html.twig' %}

{% block title %}Zones & Bâtiments - {{ parent() }}{% endblock %}

{% block page_title %}Zones & Bâtiments{% endblock %}
{% block page_subtitle %}Gestion de la structure de {{ ferme.nom }}{% endblock %}

{% block header_actions %}
    <div class="flex space-x-3">
        <button class="btn btn-primary" onclick="openAddZoneModal()">
            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
            </svg>
            Nouvelle zone ferme
        </button>
        <button class="btn btn-primary" onclick="openAddBatimentModal()">
            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
            </svg>
            Nouveau bâtiment
        </button>
    </div>
{% endblock %}

{% block body %}
    <!-- Statistiques globales -->
    <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
        <div class="stat-card">
            <div class="flex items-center">
                <div class="flex-shrink-0">
                    <div class="w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center">
                        <svg class="w-7 h-7 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"></path>
                        </svg>
                    </div>
                </div>
                <div class="ml-4">
                    <p class="text-sm font-medium text-gray-500">Zones ferme</p>
                    <p class="text-3xl font-bold text-gray-900">{{ ferme.zonesFermes|length }}</p>
                </div>
            </div>
        </div>

        <div class="stat-card">
            <div class="flex items-center">
                <div class="flex-shrink-0">
                    <div class="w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center">
                        <svg class="w-7 h-7 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"></path>
                        </svg>
                    </div>
                </div>
                <div class="ml-4">
                    <p class="text-sm font-medium text-gray-500">Bâtiments</p>
                    <p class="text-3xl font-bold text-gray-900">{{ batiments|length }}</p>
                </div>
            </div>
        </div>

        <div class="stat-card">
            <div class="flex items-center">
                <div class="flex-shrink-0">
                    <div class="w-12 h-12 bg-yellow-100 rounded-lg flex items-center justify-center">
                        <svg class="w-7 h-7 text-yellow-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 5a1 1 0 011-1h14a1 1 0 011 1v2a1 1 0 01-1 1H5a1 1 0 01-1-1V5zM4 13a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H5a1 1 0 01-1-1v-6zM16 13a1 1 0 011-1h2a1 1 0 011 1v6a1 1 0 01-1 1h-2a1 1 0 01-1-1v-6z"></path>
                        </svg>
                    </div>
                </div>
                <div class="ml-4">
                    <p class="text-sm font-medium text-gray-500">Sous-zones</p>
                    {% set totalZones = 0 %}
                    {% for batiment in batiments %}
                        {% set totalZones = totalZones + batiment.zones|length %}
                    {% endfor %}
                    <p class="text-3xl font-bold text-gray-900">{{ totalZones }}</p>
                </div>
            </div>
        </div>

        <div class="stat-card">
            <div class="flex items-center">
                <div class="flex-shrink-0">
                    <div class="w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center">
                        <svg class="w-7 h-7 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                        </svg>
                    </div>
                </div>
                <div class="ml-4">
                    <p class="text-sm font-medium text-gray-500">Taux occupation</p>
                    {% set totalOccupation = 0 %}
                    {% set nbBatimentsAvecCapacite = 0 %}
                    {% for stat in occupationStats %}
                        {% if stat.capaciteMaximale and stat.capaciteMaximale > 0 %}
                            {% set totalOccupation = totalOccupation + ((stat.effectifActuel / stat.capaciteMaximale) * 100) %}
                            {% set nbBatimentsAvecCapacite = nbBatimentsAvecCapacite + 1 %}
                        {% endif %}
                    {% endfor %}
                    {% set moyenneOccupation = nbBatimentsAvecCapacite > 0 ? (totalOccupation / nbBatimentsAvecCapacite) : 0 %}
                    <p class="text-3xl font-bold text-gray-900">{{ moyenneOccupation|number_format(0) }}%</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Filtrage des zones ferme -->
    <div class="mb-6">
        <div class="max-w-md">
            <label for="zone-filter" class="block text-sm font-medium text-gray-700 mb-2">Filtrer par zone ferme</label>
            <select id="zone-filter" onchange="filterBatimentsByZone()" class="block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm">
                <option value="">Toutes les zones</option>
                {% for zoneFerme in ferme.zonesFermes %}
                    <option value="{{ zoneFerme.id }}">{{ zoneFerme.nom }}</option>
                {% endfor %}
            </select>
        </div>
    </div>

    <!-- Zones de ferme -->
    <div class="mb-8">
        <h2 class="text-xl font-semibold text-gray-900 mb-4">Zones de la ferme</h2>
        <div class="grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-6">
            {% for zoneFerme in ferme.zonesFermes %}
                <div class="bg-white rounded-lg shadow border border-gray-200 p-6">
                    <div class="flex items-start justify-between">
                        <div class="flex-1">
                            <h3 class="text-lg font-medium text-gray-900">{{ zoneFerme.nom }}</h3>
                            <p class="text-sm text-gray-500 mb-2">{{ zoneFerme.numeroIdentification }}</p>
                            <p class="text-sm text-gray-600 mb-3">{{ zoneFerme.type|title }}</p>
                            {% if zoneFerme.description %}
                                <p class="text-sm text-gray-500 mb-4">{{ zoneFerme.description|slice(0, 100) }}...</p>
                            {% endif %}
                        </div>
                        <div class="flex flex-col items-end space-y-1">
                            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium {% if zoneFerme.actif %}bg-green-100 text-green-800{% else %}bg-red-100 text-red-800{% endif %}">
                                {{ zoneFerme.actif ? 'Actif' : 'Inactif' }}
                            </span>
                            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                                {{ zoneFerme.batiments|length }} bât.
                            </span>
                        </div>
                    </div>
                    
                    <div class="mt-4 pt-4 border-t border-gray-200">
                        <div class="flex justify-between text-sm mb-3">
                            <span class="text-gray-500">Superficie:</span>
                            <span class="font-medium">{{ zoneFerme.superficie ? zoneFerme.superficie ~ ' m²' : 'N/A' }}</span>
                        </div>
                        <div class="flex space-x-2">
                            <button onclick="openEditZoneModal({{ zoneFerme.id }})" class="btn btn-xs btn-outline flex-1">
                                <svg class="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                                </svg>
                                Modifier
                            </button>
                            <button onclick="toggleZoneStatus({{ zoneFerme.id }})" class="btn btn-xs {{ zoneFerme.actif ? 'btn-warning' : 'btn-success' }} flex-1">
                                {{ zoneFerme.actif ? 'Désactiver' : 'Activer' }}
                            </button>
                        </div>
                    </div>
                </div>
            {% else %}
                <div class="col-span-full">
                    <div class="text-center py-12 bg-gray-50 rounded-lg">
                        <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"></path>
                        </svg>
                        <h3 class="mt-2 text-sm font-medium text-gray-900">Aucune zone de ferme</h3>
                        <p class="mt-1 text-sm text-gray-500">Commencez par créer une zone pour organiser votre ferme.</p>
                        <div class="mt-6">
                            <button class="btn btn-primary" onclick="openAddZoneModal()">
                                Créer une zone
                            </button>
                        </div>
                    </div>
                </div>
            {% endfor %}
        </div>
    </div>

    <!-- Bâtiments -->
    <div class="mb-8">
        <h2 class="text-xl font-semibold text-gray-900 mb-4">Bâtiments</h2>
        <div id="batiments-grid" class="grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-6">
            {% for batiment in batiments %}
                <div class="batiment-card bg-white rounded-lg shadow border border-gray-200 p-6" data-zone-id="{{ batiment.zoneFerme ? batiment.zoneFerme.id : '' }}">
                    <div class="flex items-start justify-between">
                        <div class="flex-1">
                            <h3 class="text-lg font-medium text-gray-900">{{ batiment.nom }}</h3>
                            <p class="text-sm text-gray-500 mb-2">{{ batiment.numeroIdentification }}</p>
                            <p class="text-sm text-gray-600 mb-3">{{ batiment.type|title }}</p>
                        </div>
                        <div class="flex flex-col items-end space-y-1">
                            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium {% if batiment.statut == 'actif' %}bg-green-100 text-green-800{% elseif batiment.statut == 'maintenance' %}bg-yellow-100 text-yellow-800{% else %}bg-gray-100 text-gray-800{% endif %}">
                                {{ batiment.statut|title }}
                            </span>
                            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                                {{ batiment.zones|length }} zones
                            </span>
                        </div>
                    </div>
                    
                    <div class="mt-4 space-y-2">
                        {% if batiment.superficie %}
                            <div class="flex justify-between text-sm">
                                <span class="text-gray-500">Superficie:</span>
                                <span class="font-medium">{{ batiment.superficie }} m²</span>
                            </div>
                        {% endif %}
                        {% if batiment.capaciteMaximale %}
                            <div class="flex justify-between text-sm">
                                <span class="text-gray-500">Capacité:</span>
                                <span class="font-medium">{{ batiment.capaciteMaximale }} têtes</span>
                            </div>
                        {% endif %}
                        {% if batiment.zoneFerme %}
                            <div class="flex justify-between text-sm">
                                <span class="text-gray-500">Zone ferme:</span>
                                <span class="font-medium">{{ batiment.zoneFerme.nom }}</span>
                            </div>
                        {% endif %}
                    </div>

                    <div class="mt-4 pt-4 border-t border-gray-200">
                        <div class="flex space-x-3">
                            <a href="{{ path('batiment_show', {id: batiment.id}) }}" class="btn btn-sm btn-outline flex-1 text-center">
                                Détails
                            </a>
                            <a href="{{ path('batiment_zones', {id: batiment.id}) }}" class="btn btn-sm btn-primary flex-1 text-center">
                                Zones ({{ batiment.zones|length }})
                            </a>
                        </div>
                    </div>
                </div>
            {% else %}
                <div class="col-span-full">
                    <div class="text-center py-12 bg-gray-50 rounded-lg">
                        <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"></path>
                        </svg>
                        <h3 class="mt-2 text-sm font-medium text-gray-900">Aucun bâtiment</h3>
                        <p class="mt-1 text-sm text-gray-500">Créez votre premier bâtiment pour commencer l'organisation.</p>
                        <div class="mt-6">
                            <button class="btn btn-primary" onclick="openAddBatimentModal()">
                                Créer un bâtiment
                            </button>
                        </div>
                    </div>
                </div>
            {% endfor %}
        </div>
    </div>

    <!-- Alertes capacité -->
    {% if alertes is not empty %}
        <div class="mb-8">
            <h2 class="text-xl font-semibold text-gray-900 mb-4">Alertes capacité</h2>
            <div class="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
                <div class="flex">
                    <div class="flex-shrink-0">
                        <svg class="h-5 w-5 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd"></path>
                        </svg>
                    </div>
                    <div class="ml-3">
                        <h3 class="text-sm font-medium text-yellow-800">Bâtiments à surveiller</h3>
                        <div class="mt-2 text-sm text-yellow-700">
                            <ul class="list-disc list-inside space-y-1">
                                {% for alerte in alertes %}
                                    <li>{{ alerte.nom }} - Capacité dépassée ({{ alerte.effectifActuel }}/{{ alerte.capaciteMaximale }})</li>
                                {% endfor %}
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    {% endif %}

    <!-- Modal d'ajout de zone ferme -->
    <div id="addZoneFermeModal" class="fixed inset-0 z-50 hidden transition-opacity duration-300 opacity-0">
        <div class="fixed inset-0 bg-black/40 backdrop-blur-sm transition-opacity"></div>
        <div class="fixed inset-0 overflow-y-auto">
            <div class="flex min-h-full items-center justify-center p-4">
                <div class="relative w-full max-w-2xl transform scale-95 transition-all duration-300 bg-white rounded-2xl shadow-xl">
                    <div class="flex items-center justify-between p-6 border-b border-gray-200">
                        <h3 class="text-xl font-semibold text-gray-900">Nouvelle Zone Ferme</h3>
                        <button type="button" onclick="closeAddZoneFermeModal()" class="rounded-full p-1 text-gray-400 hover:text-gray-500 hover:bg-gray-100">
                            <svg class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
                            </svg>
                        </button>
                    </div>
                    
                    <div class="max-h-[70vh] overflow-y-auto p-6">
                        <form id="addZoneFermeForm" onsubmit="submitAddZoneFerme(event)">
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                                <div>
                                    <label for="zone-ferme-nom" class="block text-sm font-medium leading-6 text-gray-900 mb-2">Nom *</label>
                                    <input type="text" id="zone-ferme-nom" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-blue-600 sm:text-sm sm:leading-6" placeholder=" Ex: Zone de production Est" required>
                                </div>
                                <div>
                                    <label for="zone-ferme-type" class="block text-sm font-medium leading-6 text-gray-900 mb-2">Type</label>
                                    <select id="zone-ferme-type" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-blue-600 sm:text-sm sm:leading-6">
                                        <option value="production">Production</option>
                                        <option value="stockage">Stockage</option>
                                        <option value="administration">Administration</option>
                                        <option value="parcours">Parcours</option>
                                        <option value="cultures">Cultures</option>
                                        <option value="autre">Autre</option>
                                    </select>
                                </div>
                                <div>
                                    <label for="zone-ferme-superficie" class="block text-sm font-medium leading-6 text-gray-900 mb-2">Superficie (m²)</label>
                                    <input type="number" step="0.01" id="zone-ferme-superficie" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-blue-600 sm:text-sm sm:leading-6" placeholder=" 1000.00">
                                </div>
                                <div>
                                    <label for="zone-ferme-localisation" class="block text-sm font-medium leading-6 text-gray-900 mb-2">Localisation</label>
                                    <input type="text" id="zone-ferme-localisation" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-blue-600 sm:text-sm sm:leading-6" placeholder=" Nord de la ferme">
                                </div>
                            </div>
                            
                            <div class="mt-6">
                                <label for="zone-ferme-description" class="block text-sm font-medium leading-6 text-gray-900 mb-2">Description</label>
                                <textarea id="zone-ferme-description" rows="3" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-blue-600 sm:text-sm sm:leading-6" placeholder=" Description de la zone..."></textarea>
                            </div>
                            
                            <div class="mt-6">
                                <label for="zone-ferme-caracteristiques" class="block text-sm font-medium leading-6 text-gray-900 mb-2">Caractéristiques</label>
                                <textarea id="zone-ferme-caracteristiques" rows="2" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-blue-600 sm:text-sm sm:leading-6" placeholder=" Caractéristiques spécifiques..."></textarea>
                            </div>
                            
                            <div class="flex justify-end space-x-3 mt-6">
                                <button type="button" onclick="closeAddZoneFermeModal()" class="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50">
                                    Annuler
                                </button>
                                <button type="submit" class="px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-md shadow-sm hover:bg-blue-700">
                                    Créer
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal d'ajout de bâtiment -->
    <div id="addBatimentModal" class="fixed inset-0 z-50 hidden transition-opacity duration-300 opacity-0">
        <div class="fixed inset-0 bg-black/40 backdrop-blur-sm transition-opacity"></div>
        <div class="fixed inset-0 overflow-y-auto">
            <div class="flex min-h-full items-center justify-center p-4">
                <div class="relative w-full max-w-2xl transform scale-95 transition-all duration-300 bg-white rounded-2xl shadow-xl">
                    <div class="flex items-center justify-between p-6 border-b border-gray-200">
                        <h3 class="text-xl font-semibold text-gray-900">Nouveau Bâtiment</h3>
                        <button type="button" onclick="closeAddBatimentModal()" class="rounded-full p-1 text-gray-400 hover:text-gray-500 hover:bg-gray-100">
                            <svg class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
                            </svg>
                        </button>
                    </div>
                    
                    <div class="max-h-[70vh] overflow-y-auto p-6">
                        <form id="addBatimentForm" onsubmit="submitAddBatiment(event)">
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                                <div>
                                    <label for="batiment-nom" class="block text-sm font-medium leading-6 text-gray-900 mb-2">Nom *</label>
                                    <input type="text" id="batiment-nom" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-blue-600 sm:text-sm sm:leading-6" placeholder=" Ex: Étable principale" required>
                                </div>
                                <div>
                                    <label for="batiment-type" class="block text-sm font-medium leading-6 text-gray-900 mb-2">Type</label>
                                    <select id="batiment-type" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-blue-600 sm:text-sm sm:leading-6">
                                        <option value="etable">Étable</option>
                                        <option value="ecurie">Écurie</option>
                                        <option value="porcherie">Porcherie</option>
                                        <option value="bergerie">Bergerie</option>
                                        <option value="chevrerie">Chèvrerie</option>
                                        <option value="hangar">Hangar</option>
                                        <option value="poulailler">Poulailler</option>
                                        <option value="autre">Autre</option>
                                    </select>
                                </div>
                                <div>
                                    <label for="batiment-zone-ferme" class="block text-sm font-medium leading-6 text-gray-900 mb-2">Zone ferme</label>
                                    <select id="batiment-zone-ferme" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-blue-600 sm:text-sm sm:leading-6">
                                        <option value="">Aucune zone ferme</option>
                                        {% for zoneFerme in ferme.zonesFermes %}
                                            <option value="{{ zoneFerme.id }}">{{ zoneFerme.nom }}</option>
                                        {% endfor %}
                                    </select>
                                </div>
                                <div>
                                    <label for="batiment-statut" class="block text-sm font-medium leading-6 text-gray-900 mb-2">Statut</label>
                                    <select id="batiment-statut" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-blue-600 sm:text-sm sm:leading-6">
                                        <option value="actif">Actif</option>
                                        <option value="maintenance">En maintenance</option>
                                        <option value="inactif">Inactif</option>
                                    </select>
                                </div>
                                <div>
                                    <label for="batiment-superficie" class="block text-sm font-medium leading-6 text-gray-900 mb-2">Superficie (m²)</label>
                                    <input type="number" step="0.01" id="batiment-superficie" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-blue-600 sm:text-sm sm:leading-6" placeholder=" 500.00">
                                </div>
                                <div>
                                    <label for="batiment-capacite" class="block text-sm font-medium leading-6 text-gray-900 mb-2">Capacité maximale</label>
                                    <input type="number" id="batiment-capacite" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-blue-600 sm:text-sm sm:leading-6" placeholder=" 50">
                                </div>
                            </div>
                            
                            <div class="mt-6">
                                <label for="batiment-description" class="block text-sm font-medium leading-6 text-gray-900 mb-2">Description</label>
                                <textarea id="batiment-description" rows="3" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-blue-600 sm:text-sm sm:leading-6" placeholder=" Description du bâtiment..."></textarea>
                            </div>
                            
                            <div class="flex justify-end space-x-3 mt-6">
                                <button type="button" onclick="closeAddBatimentModal()" class="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50">
                                    Annuler
                                </button>
                                <button type="submit" class="px-4 py-2 text-sm font-medium text-white bg-green-600 border border-transparent rounded-md shadow-sm hover:bg-green-700">
                                    Créer
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal de modification de zone ferme -->
    <div id="editZoneFermeModal" class="fixed inset-0 z-50 hidden transition-opacity duration-300 opacity-0">
        <div class="fixed inset-0 bg-black/40 backdrop-blur-sm transition-opacity"></div>
        <div class="fixed inset-0 overflow-y-auto">
            <div class="flex min-h-full items-center justify-center p-4">
                <div class="relative w-full max-w-2xl transform scale-95 transition-all duration-300 bg-white rounded-2xl shadow-xl">
                    <div class="flex items-center justify-between p-6 border-b border-gray-200">
                        <h3 class="text-xl font-semibold text-gray-900">Modifier Zone Ferme</h3>
                        <button type="button" onclick="closeEditZoneFermeModal()" class="rounded-full p-1 text-gray-400 hover:text-gray-500 hover:bg-gray-100">
                            <svg class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
                            </svg>
                        </button>
                    </div>
                    
                    <div class="max-h-[70vh] overflow-y-auto p-6">
                        <form id="editZoneFermeForm" onsubmit="submitEditZoneFerme(event)">
                            <input type="hidden" id="edit-zone-id" />
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                                <div>
                                    <label for="edit-zone-ferme-nom" class="block text-sm font-medium leading-6 text-gray-900 mb-2">Nom *</label>
                                    <input type="text" id="edit-zone-ferme-nom" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-blue-600 sm:text-sm sm:leading-6" placeholder=" Ex: Zone de production Est" required>
                                </div>
                                <div>
                                    <label for="edit-zone-ferme-type" class="block text-sm font-medium leading-6 text-gray-900 mb-2">Type</label>
                                    <select id="edit-zone-ferme-type" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-blue-600 sm:text-sm sm:leading-6">
                                        <option value="production">Production</option>
                                        <option value="stockage">Stockage</option>
                                        <option value="administration">Administration</option>
                                        <option value="parcours">Parcours</option>
                                        <option value="cultures">Cultures</option>
                                        <option value="autre">Autre</option>
                                    </select>
                                </div>
                                <div>
                                    <label for="edit-zone-ferme-superficie" class="block text-sm font-medium leading-6 text-gray-900 mb-2">Superficie (m²)</label>
                                    <input type="number" step="0.01" id="edit-zone-ferme-superficie" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-blue-600 sm:text-sm sm:leading-6" placeholder=" 1000.00">
                                </div>
                                <div>
                                    <label for="edit-zone-ferme-localisation" class="block text-sm font-medium leading-6 text-gray-900 mb-2">Localisation</label>
                                    <input type="text" id="edit-zone-ferme-localisation" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-blue-600 sm:text-sm sm:leading-6" placeholder=" Nord de la ferme">
                                </div>
                            </div>
                            
                            <div class="mt-6">
                                <label for="edit-zone-ferme-description" class="block text-sm font-medium leading-6 text-gray-900 mb-2">Description</label>
                                <textarea id="edit-zone-ferme-description" rows="3" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-blue-600 sm:text-sm sm:leading-6" placeholder=" Description de la zone..."></textarea>
                            </div>
                            
                            <div class="mt-6">
                                <label for="edit-zone-ferme-caracteristiques" class="block text-sm font-medium leading-6 text-gray-900 mb-2">Caractéristiques</label>
                                <textarea id="edit-zone-ferme-caracteristiques" rows="2" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-blue-600 sm:text-sm sm:leading-6" placeholder=" Caractéristiques spécifiques..."></textarea>
                            </div>
                            
                            <div class="flex justify-end space-x-3 mt-6">
                                <button type="button" onclick="closeEditZoneFermeModal()" class="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50">
                                    Annuler
                                </button>
                                <button type="submit" class="px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-md shadow-sm hover:bg-blue-700">
                                    Modifier
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Filtrage des bâtiments par zone
        function filterBatimentsByZone() {
            const selectedZoneId = document.getElementById('zone-filter').value;
            const batimentCards = document.querySelectorAll('.batiment-card');
            
            batimentCards.forEach(card => {
                const cardZoneId = card.getAttribute('data-zone-id');
                
                if (!selectedZoneId || cardZoneId === selectedZoneId) {
                    card.style.display = 'block';
                } else {
                    card.style.display = 'none';
                }
            });
            
            // Afficher un message si aucun bâtiment trouvé
            const visibleCards = Array.from(batimentCards).filter(card => card.style.display !== 'none');
            const grid = document.getElementById('batiments-grid');
            
            let noResultsMsg = document.getElementById('no-batiments-message');
            if (visibleCards.length === 0) {
                if (!noResultsMsg) {
                    noResultsMsg = document.createElement('div');
                    noResultsMsg.id = 'no-batiments-message';
                    noResultsMsg.className = 'col-span-full text-center py-12 bg-gray-50 rounded-lg';
                    noResultsMsg.innerHTML = `
                        <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"></path>
                        </svg>
                        <h3 class="mt-2 text-sm font-medium text-gray-900">Aucun bâtiment trouvé</h3>
                        <p class="mt-1 text-sm text-gray-500">Aucun bâtiment ne correspond à cette zone ferme.</p>
                    `;
                    grid.appendChild(noResultsMsg);
                } else {
                    noResultsMsg.style.display = 'block';
                }
            } else if (noResultsMsg) {
                noResultsMsg.style.display = 'none';
            }
        }

        // Gestion des zones ferme
        function openEditZoneModal(zoneId) {
            // Récupérer les données de la zone via API
            fetch(`{{ path('zone_ferme_update', {id: '__ZONE_ID__'}) }}`.replace('__ZONE_ID__', zoneId))
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        const zone = data.zoneFerme;
                        document.getElementById('edit-zone-id').value = zone.id;
                        document.getElementById('edit-zone-ferme-nom').value = zone.nom;
                        document.getElementById('edit-zone-ferme-type').value = zone.type;
                        document.getElementById('edit-zone-ferme-superficie').value = zone.superficie || '';
                        document.getElementById('edit-zone-ferme-localisation').value = zone.localisation || '';
                        document.getElementById('edit-zone-ferme-description').value = zone.description || '';
                        document.getElementById('edit-zone-ferme-caracteristiques').value = zone.caracteristiques || '';
                        
                        // Ouvrir le modal
                        document.body.style.overflow = 'hidden';
                        const modal = document.getElementById('editZoneFermeModal');
                        modal.classList.remove('hidden');
                        
                        setTimeout(() => {
                            modal.classList.remove('opacity-0');
                            modal.querySelector('.transform').classList.remove('scale-95');
                            modal.querySelector('.transform').classList.add('scale-100');
                        }, 10);
                    } else {
                        showToast('Erreur lors du chargement des données: ' + data.message, 'error');
                    }
                })
                .catch(error => {
                    console.error('Erreur:', error);
                    showToast('Une erreur est survenue lors du chargement des données', 'error');
                });
        }

        function closeEditZoneFermeModal() {
            document.body.style.overflow = 'auto';
            const modal = document.getElementById('editZoneFermeModal');
            
            modal.classList.add('opacity-0');
            modal.querySelector('.transform').classList.remove('scale-100');
            modal.querySelector('.transform').classList.add('scale-95');
            
            setTimeout(() => {
                modal.classList.add('hidden');
                document.getElementById('editZoneFermeForm').reset();
            }, 300);
        }

        function submitEditZoneFerme(event) {
            event.preventDefault();
            
            const zoneId = document.getElementById('edit-zone-id').value;
            const formData = {
                nom: document.getElementById('edit-zone-ferme-nom').value,
                type: document.getElementById('edit-zone-ferme-type').value,
                superficie: document.getElementById('edit-zone-ferme-superficie').value || null,
                localisation: document.getElementById('edit-zone-ferme-localisation').value,
                description: document.getElementById('edit-zone-ferme-description').value,
                caracteristiques: document.getElementById('edit-zone-ferme-caracteristiques').value
            };

            fetch(`{{ path('zone_ferme_update', {id: '__ZONE_ID__'}) }}`.replace('__ZONE_ID__', zoneId), {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(formData)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showToast('Zone ferme modifiée avec succès!', 'success');
                    closeEditZoneFermeModal();
                    setTimeout(() => {
                        window.location.reload();
                    }, 1000);
                } else {
                    showToast('Erreur: ' + data.message, 'error');
                }
            })
            .catch(error => {
                console.error('Erreur:', error);
                showToast('Une erreur est survenue lors de la modification', 'error');
            });
        }

        function toggleZoneStatus(zoneId) {
            fetch(`{{ path('zone_ferme_toggle_status', {id: '__ZONE_ID__'}) }}`.replace('__ZONE_ID__', zoneId), {
                method: 'PATCH',
                headers: {
                    'Content-Type': 'application/json',
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showToast(data.message, 'success');
                    setTimeout(() => {
                        window.location.reload();
                    }, 1000);
                } else {
                    showToast('Erreur: ' + data.message, 'error');
                }
            })
            .catch(error => {
                console.error('Erreur:', error);
                showToast('Une erreur est survenue lors du changement de statut', 'error');
            });
        }

        // Modal zone ferme
        function openAddZoneModal() {
            document.body.style.overflow = 'hidden';
            const modal = document.getElementById('addZoneFermeModal');
            modal.classList.remove('hidden');
            
            setTimeout(() => {
                modal.classList.remove('opacity-0');
                modal.querySelector('.transform').classList.remove('scale-95');
                modal.querySelector('.transform').classList.add('scale-100');
            }, 10);
        }

        function closeAddZoneFermeModal() {
            document.body.style.overflow = 'auto';
            const modal = document.getElementById('addZoneFermeModal');
            
            modal.classList.add('opacity-0');
            modal.querySelector('.transform').classList.remove('scale-100');
            modal.querySelector('.transform').classList.add('scale-95');
            
            setTimeout(() => {
                modal.classList.add('hidden');
                document.getElementById('addZoneFermeForm').reset();
            }, 300);
        }

        function submitAddZoneFerme(event) {
            event.preventDefault();
            
            const formData = {
                fermeId: {{ ferme.id }},
                nom: document.getElementById('zone-ferme-nom').value,
                type: document.getElementById('zone-ferme-type').value,
                superficie: document.getElementById('zone-ferme-superficie').value || null,
                localisation: document.getElementById('zone-ferme-localisation').value,
                description: document.getElementById('zone-ferme-description').value,
                caracteristiques: document.getElementById('zone-ferme-caracteristiques').value
            };

            fetch('{{ path('zone_ferme_create') }}', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(formData)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showToast('Zone ferme créée avec succès!', 'success');
                    closeAddZoneFermeModal();
                    setTimeout(() => {
                        window.location.reload();
                    }, 1000);
                } else {
                    showToast('Erreur: ' + data.message, 'error');
                }
            })
            .catch(error => {
                console.error('Erreur:', error);
                showToast('Une erreur est survenue lors de la création de la zone ferme', 'error');
            });
        }

        // Modal bâtiment
        function openAddBatimentModal() {
            document.body.style.overflow = 'hidden';
            const modal = document.getElementById('addBatimentModal');
            modal.classList.remove('hidden');
            
            setTimeout(() => {
                modal.classList.remove('opacity-0');
                modal.querySelector('.transform').classList.remove('scale-95');
                modal.querySelector('.transform').classList.add('scale-100');
            }, 10);
        }

        function closeAddBatimentModal() {
            document.body.style.overflow = 'auto';
            const modal = document.getElementById('addBatimentModal');
            
            modal.classList.add('opacity-0');
            modal.querySelector('.transform').classList.remove('scale-100');
            modal.querySelector('.transform').classList.add('scale-95');
            
            setTimeout(() => {
                modal.classList.add('hidden');
                document.getElementById('addBatimentForm').reset();
            }, 300);
        }

        function submitAddBatiment(event) {
            event.preventDefault();
            
            const formData = {
                fermeId: {{ ferme.id }},
                nom: document.getElementById('batiment-nom').value,
                type: document.getElementById('batiment-type').value,
                zoneFermeId: document.getElementById('batiment-zone-ferme').value || null,
                statut: document.getElementById('batiment-statut').value,
                superficie: document.getElementById('batiment-superficie').value || null,
                capaciteMaximale: document.getElementById('batiment-capacite').value || null,
                description: document.getElementById('batiment-description').value
            };

            fetch('{{ path('batiment_create') }}', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(formData)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showToast('Bâtiment créé avec succès!', 'success');
                    closeAddBatimentModal();
                    setTimeout(() => {
                        window.location.reload();
                    }, 1000);
                } else {
                    showToast('Erreur: ' + data.message, 'error');
                }
            })
            .catch(error => {
                console.error('Erreur:', error);
                showToast('Une erreur est survenue lors de la création du bâtiment', 'error');
            });
        }
    </script>
{% endblock %}